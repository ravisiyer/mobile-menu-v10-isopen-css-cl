* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: ui-sans-serif, system-ui, sans-serif;
}

body {
  min-height: 100vh;
  background-color: rgb(248 250 252);
}

main {
  display: flex;
  justify-content: center;
  align-items: center;
}

.main-container {
  max-width: 896px;
}

.main-container h1,
.main-container h2,
.main-container p {
  padding: 0.5rem;
}

a.menu_link:link,
a.menu_link:visited {
  text-decoration: none;
  color: white;
}

a.menu_link:hover {
  opacity: 0.7;
}

.header {
  position: sticky;
  top: 0px;
  z-index: 10;
  background-color: rgb(15 118 110);
  color: white;
}

.menu {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 896px;
  padding: 1rem;
}

.header_title {
  font-size: 1.875rem;
  line-height: 2.25rem;
  font-weight: 500;
}

.mobile_menu_btn,
.mobile_menu_close_btn {
  cursor: pointer;
  font-size: 1.875rem;
  line-height: 2.25rem;
  background-color: rgb(15 118 110);
  color: white;
  border: none;
}

/* Below code is a little complex as it gets applied only if mobile-menu-btn classlist does NOT have is_open.
But the logic of the code becomes clear. If is_open class is not there, then mobile-menu-btn should be shown.
Conversely, if is_open class is there (in its classlist), then mobile-menu-btn should NOT be shown (as we will
show mobile-menu-close-btn in that case). */
.mobile_menu_btn:not(.is_open) {
  display: block;
}

/* .mobile_menu_btn {
  display: block;
} */

/* Note that below code has higher specificity than the above .mobile_menu_btn rule (without not) which is now 
commented. So below code will override above .mobile_menu_btn (without not) rule if is_open class is in classlist
 of mobile-menu-btn. */
.mobile_menu_btn.is_open {
  display: none;
}

.mobile_menu_close_btn:not(.is_open) {
  display: none;
}

.mobile_menu_close_btn.is_open {
  display: block;
}

.menu_nav {
  display: none;
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.menu_nav > a {
  margin-left: 32px;
}

.mobile_menu {
  position: absolute;
  top: 68px;
  width: 100%;
  justify-content: center;
  flex-direction: column;
  background-color: black;
  font-size: 3rem;
  line-height: 1;
}

.mobile_menu:not(.is_open) {
  display: none;
}

.mobile_menu.is_open {
  display: block;
}

.mobile_menu_nav {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  align-items: center;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.mobile_menu_nav > a {
  width: 100%;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  text-align: center;
}

.mobile_menu_nav > a:hover {
  opacity: 0.7;
}

.mobile_menu_nav > a:link,
.mobile_menu_nav > a:visited {
  text-decoration: none;
  color: white;
}

@media screen and (min-width: 768px) {
  /* ID selectors are used to ensure higher specificity to below rules as compared to earlier corresponding rules with two classes.
  Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity */

  #mobile-menu-btn {
    display: none;
  }

  #mobile-menu-close-btn {
    display: none;
  }

  #mobile-menu {
    display: none;
  }

  .menu_nav {
    display: block;
  }
}
